#!/usr/bin/env bash

ask() {
    # http://djm.me/ask
    while true; do

        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"
            default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"
            default=N
        else
            prompt="y/n"
            default=
        fi

        # Ask the question - use /dev/tty in case stdin is redirected from somewhere else
        echo -en "\e[1m\e[33m$1\e[0m "
        read -p "[$prompt] " REPLY </dev/tty

        # Default?
        if [ -z "$REPLY" ]; then
            REPLY=$default
        fi

        # Check if the reply is valid
        case "$REPLY" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac

    done
}

inform() {
  echo -e "\e[1m\e[36m$@\e[0m"
  sleep 1
}

install_ruby() {
  local desired_version=$1

  ask "Do you want to install Ruby $desired_version? (it won't affect your Ruby installation)" N && (
    inform "Installing RVM..."
    sleep 1
    gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
    \curl -sSL https://get.rvm.io | bash -s stable --ruby=$desired_version --auto-dotfiles
    inform "Using Ruby $desired_version..."
    source ~/.rvm/scripts/rvm
    rvm use $desired_version
    return 0
  ) || (
    return -1
  )
}

configure_ruby() {
  inform "Searching for Ruby..."
  local desired_version=2.3

  which -a ruby && (
    inform "OK! Checking Ruby version..."
    local version=$(ruby -e "puts RUBY_VERSION")
    inform "Current Ruby version is \"$version\"."
    ruby -e "exit 1 unless RUBY_VERSION.start_with? '$desired_version'" && (
      inform "OK!"
    ) || (
      install_ruby $desired_version
    )
    inform "Installing dependencies..."
    gem install bundler --conservative && bundle install
    inform "Compiling native extensions..."
    rake compile
    return 0
  ) || (
    inform "Couldn't find a Ruby installation"
    install_ruby $desired_version || (
      inform "Please install Ruby to continue. Aborting..."
      return -2
    )
  )
}

setup() {
  configure_ruby || exit -2

  inform "Everything set up! You can run bin/start to start the program"
}

setup
